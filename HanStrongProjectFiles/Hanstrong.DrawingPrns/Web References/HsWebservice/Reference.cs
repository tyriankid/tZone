//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3615
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3615 版自动生成。
// 
#pragma warning disable 1591

namespace Hanstrong.DrawingPrns.HsWebservice {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetLicenseKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MD5OperationCompleted;
        
        private System.Threading.SendOrPostCallback EncodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DecodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTransOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecutePrdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSetBySqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataTableBySqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSetByPrdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipDataSetBySqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipDataSetByPrdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginPassOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Hanstrong.DrawingPrns.Properties.Settings.Default.Hanstrong_Decrypts_HsWebservice_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetLicenseKeyCompletedEventHandler GetLicenseKeyCompleted;
        
        /// <remarks/>
        public event MD5CompletedEventHandler MD5Completed;
        
        /// <remarks/>
        public event EncodeCompletedEventHandler EncodeCompleted;
        
        /// <remarks/>
        public event DecodeCompletedEventHandler DecodeCompleted;
        
        /// <remarks/>
        public event ExecuteSqlCompletedEventHandler ExecuteSqlCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTransCompletedEventHandler ExecuteSqlTransCompleted;
        
        /// <remarks/>
        public event ExecutePrdCompletedEventHandler ExecutePrdCompleted;
        
        /// <remarks/>
        public event GetDataSetBySqlCompletedEventHandler GetDataSetBySqlCompleted;
        
        /// <remarks/>
        public event GetDataTableBySqlCompletedEventHandler GetDataTableBySqlCompleted;
        
        /// <remarks/>
        public event GetDataSetByPrdCompletedEventHandler GetDataSetByPrdCompleted;
        
        /// <remarks/>
        public event GetZipDataSetBySqlCompletedEventHandler GetZipDataSetBySqlCompleted;
        
        /// <remarks/>
        public event GetZipDataSetByPrdCompletedEventHandler GetZipDataSetByPrdCompleted;
        
        /// <remarks/>
        public event CheckLoginPassCompletedEventHandler CheckLoginPassCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLicenseKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLicenseKey(string Code) {
            object[] results = this.Invoke("GetLicenseKey", new object[] {
                        Code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseKeyAsync(string Code) {
            this.GetLicenseKeyAsync(Code, null);
        }
        
        /// <remarks/>
        public void GetLicenseKeyAsync(string Code, object userState) {
            if ((this.GetLicenseKeyOperationCompleted == null)) {
                this.GetLicenseKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseKeyOperationCompleted);
            }
            this.InvokeAsync("GetLicenseKey", new object[] {
                        Code}, this.GetLicenseKeyOperationCompleted, userState);
        }
        
        private void OnGetLicenseKeyOperationCompleted(object arg) {
            if ((this.GetLicenseKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseKeyCompleted(this, new GetLicenseKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MD5", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MD5(string data) {
            object[] results = this.Invoke("MD5", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MD5Async(string data) {
            this.MD5Async(data, null);
        }
        
        /// <remarks/>
        public void MD5Async(string data, object userState) {
            if ((this.MD5OperationCompleted == null)) {
                this.MD5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnMD5OperationCompleted);
            }
            this.InvokeAsync("MD5", new object[] {
                        data}, this.MD5OperationCompleted, userState);
        }
        
        private void OnMD5OperationCompleted(object arg) {
            if ((this.MD5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MD5Completed(this, new MD5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Encode(string data, string key) {
            object[] results = this.Invoke("Encode", new object[] {
                        data,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncodeAsync(string data, string key) {
            this.EncodeAsync(data, key, null);
        }
        
        /// <remarks/>
        public void EncodeAsync(string data, string key, object userState) {
            if ((this.EncodeOperationCompleted == null)) {
                this.EncodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncodeOperationCompleted);
            }
            this.InvokeAsync("Encode", new object[] {
                        data,
                        key}, this.EncodeOperationCompleted, userState);
        }
        
        private void OnEncodeOperationCompleted(object arg) {
            if ((this.EncodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncodeCompleted(this, new EncodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Decode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Decode(string data, string key) {
            object[] results = this.Invoke("Decode", new object[] {
                        data,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DecodeAsync(string data, string key) {
            this.DecodeAsync(data, key, null);
        }
        
        /// <remarks/>
        public void DecodeAsync(string data, string key, object userState) {
            if ((this.DecodeOperationCompleted == null)) {
                this.DecodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDecodeOperationCompleted);
            }
            this.InvokeAsync("Decode", new object[] {
                        data,
                        key}, this.DecodeOperationCompleted, userState);
        }
        
        private void OnDecodeOperationCompleted(object arg) {
            if ((this.DecodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DecodeCompleted(this, new DecodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteSql(string SqlCmd) {
            object[] results = this.Invoke("ExecuteSql", new object[] {
                        SqlCmd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlAsync(string SqlCmd) {
            this.ExecuteSqlAsync(SqlCmd, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlAsync(string SqlCmd, object userState) {
            if ((this.ExecuteSqlOperationCompleted == null)) {
                this.ExecuteSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlOperationCompleted);
            }
            this.InvokeAsync("ExecuteSql", new object[] {
                        SqlCmd}, this.ExecuteSqlOperationCompleted, userState);
        }
        
        private void OnExecuteSqlOperationCompleted(object arg) {
            if ((this.ExecuteSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlCompleted(this, new ExecuteSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSqlTrans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteSqlTrans(string[] SqlCmd) {
            object[] results = this.Invoke("ExecuteSqlTrans", new object[] {
                        SqlCmd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlTransAsync(string[] SqlCmd) {
            this.ExecuteSqlTransAsync(SqlCmd, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTransAsync(string[] SqlCmd, object userState) {
            if ((this.ExecuteSqlTransOperationCompleted == null)) {
                this.ExecuteSqlTransOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTransOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTrans", new object[] {
                        SqlCmd}, this.ExecuteSqlTransOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTransOperationCompleted(object arg) {
            if ((this.ExecuteSqlTransCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTransCompleted(this, new ExecuteSqlTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecutePrd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecutePrd(string PrdName, string[] Params, object[] Values) {
            object[] results = this.Invoke("ExecutePrd", new object[] {
                        PrdName,
                        Params,
                        Values});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecutePrdAsync(string PrdName, string[] Params, object[] Values) {
            this.ExecutePrdAsync(PrdName, Params, Values, null);
        }
        
        /// <remarks/>
        public void ExecutePrdAsync(string PrdName, string[] Params, object[] Values, object userState) {
            if ((this.ExecutePrdOperationCompleted == null)) {
                this.ExecutePrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecutePrdOperationCompleted);
            }
            this.InvokeAsync("ExecutePrd", new object[] {
                        PrdName,
                        Params,
                        Values}, this.ExecutePrdOperationCompleted, userState);
        }
        
        private void OnExecutePrdOperationCompleted(object arg) {
            if ((this.ExecutePrdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecutePrdCompleted(this, new ExecutePrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataSetBySql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSetBySql(string SqlCmd) {
            object[] results = this.Invoke("GetDataSetBySql", new object[] {
                        SqlCmd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetBySqlAsync(string SqlCmd) {
            this.GetDataSetBySqlAsync(SqlCmd, null);
        }
        
        /// <remarks/>
        public void GetDataSetBySqlAsync(string SqlCmd, object userState) {
            if ((this.GetDataSetBySqlOperationCompleted == null)) {
                this.GetDataSetBySqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetBySqlOperationCompleted);
            }
            this.InvokeAsync("GetDataSetBySql", new object[] {
                        SqlCmd}, this.GetDataSetBySqlOperationCompleted, userState);
        }
        
        private void OnGetDataSetBySqlOperationCompleted(object arg) {
            if ((this.GetDataSetBySqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetBySqlCompleted(this, new GetDataSetBySqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataTableBySql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataTableBySql(string SqlCmd) {
            object[] results = this.Invoke("GetDataTableBySql", new object[] {
                        SqlCmd});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTableBySqlAsync(string SqlCmd) {
            this.GetDataTableBySqlAsync(SqlCmd, null);
        }
        
        /// <remarks/>
        public void GetDataTableBySqlAsync(string SqlCmd, object userState) {
            if ((this.GetDataTableBySqlOperationCompleted == null)) {
                this.GetDataTableBySqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTableBySqlOperationCompleted);
            }
            this.InvokeAsync("GetDataTableBySql", new object[] {
                        SqlCmd}, this.GetDataTableBySqlOperationCompleted, userState);
        }
        
        private void OnGetDataTableBySqlOperationCompleted(object arg) {
            if ((this.GetDataTableBySqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTableBySqlCompleted(this, new GetDataTableBySqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataSetByPrd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSetByPrd(string PrdName, string[] Params, object[] Values) {
            object[] results = this.Invoke("GetDataSetByPrd", new object[] {
                        PrdName,
                        Params,
                        Values});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSetByPrdAsync(string PrdName, string[] Params, object[] Values) {
            this.GetDataSetByPrdAsync(PrdName, Params, Values, null);
        }
        
        /// <remarks/>
        public void GetDataSetByPrdAsync(string PrdName, string[] Params, object[] Values, object userState) {
            if ((this.GetDataSetByPrdOperationCompleted == null)) {
                this.GetDataSetByPrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSetByPrdOperationCompleted);
            }
            this.InvokeAsync("GetDataSetByPrd", new object[] {
                        PrdName,
                        Params,
                        Values}, this.GetDataSetByPrdOperationCompleted, userState);
        }
        
        private void OnGetDataSetByPrdOperationCompleted(object arg) {
            if ((this.GetDataSetByPrdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSetByPrdCompleted(this, new GetDataSetByPrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZipDataSetBySql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetZipDataSetBySql(string SqlCmd, short argLevel) {
            object[] results = this.Invoke("GetZipDataSetBySql", new object[] {
                        SqlCmd,
                        argLevel});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZipDataSetBySqlAsync(string SqlCmd, short argLevel) {
            this.GetZipDataSetBySqlAsync(SqlCmd, argLevel, null);
        }
        
        /// <remarks/>
        public void GetZipDataSetBySqlAsync(string SqlCmd, short argLevel, object userState) {
            if ((this.GetZipDataSetBySqlOperationCompleted == null)) {
                this.GetZipDataSetBySqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipDataSetBySqlOperationCompleted);
            }
            this.InvokeAsync("GetZipDataSetBySql", new object[] {
                        SqlCmd,
                        argLevel}, this.GetZipDataSetBySqlOperationCompleted, userState);
        }
        
        private void OnGetZipDataSetBySqlOperationCompleted(object arg) {
            if ((this.GetZipDataSetBySqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipDataSetBySqlCompleted(this, new GetZipDataSetBySqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetZipDataSetByPrd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetZipDataSetByPrd(string PrdName, string[] Params, object[] Values, short argLevel) {
            object[] results = this.Invoke("GetZipDataSetByPrd", new object[] {
                        PrdName,
                        Params,
                        Values,
                        argLevel});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZipDataSetByPrdAsync(string PrdName, string[] Params, object[] Values, short argLevel) {
            this.GetZipDataSetByPrdAsync(PrdName, Params, Values, argLevel, null);
        }
        
        /// <remarks/>
        public void GetZipDataSetByPrdAsync(string PrdName, string[] Params, object[] Values, short argLevel, object userState) {
            if ((this.GetZipDataSetByPrdOperationCompleted == null)) {
                this.GetZipDataSetByPrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipDataSetByPrdOperationCompleted);
            }
            this.InvokeAsync("GetZipDataSetByPrd", new object[] {
                        PrdName,
                        Params,
                        Values,
                        argLevel}, this.GetZipDataSetByPrdOperationCompleted, userState);
        }
        
        private void OnGetZipDataSetByPrdOperationCompleted(object arg) {
            if ((this.GetZipDataSetByPrdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipDataSetByPrdCompleted(this, new GetZipDataSetByPrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLoginPass(string loginName, string loginPass) {
            object[] results = this.Invoke("CheckLoginPass", new object[] {
                        loginName,
                        loginPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginPassAsync(string loginName, string loginPass) {
            this.CheckLoginPassAsync(loginName, loginPass, null);
        }
        
        /// <remarks/>
        public void CheckLoginPassAsync(string loginName, string loginPass, object userState) {
            if ((this.CheckLoginPassOperationCompleted == null)) {
                this.CheckLoginPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginPassOperationCompleted);
            }
            this.InvokeAsync("CheckLoginPass", new object[] {
                        loginName,
                        loginPass}, this.CheckLoginPassOperationCompleted, userState);
        }
        
        private void OnCheckLoginPassOperationCompleted(object arg) {
            if ((this.CheckLoginPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginPassCompleted(this, new CheckLoginPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLicenseKeyCompletedEventHandler(object sender, GetLicenseKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MD5CompletedEventHandler(object sender, MD5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MD5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MD5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void EncodeCompletedEventHandler(object sender, EncodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DecodeCompletedEventHandler(object sender, DecodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DecodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DecodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ExecuteSqlCompletedEventHandler(object sender, ExecuteSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ExecuteSqlTransCompletedEventHandler(object sender, ExecuteSqlTransCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ExecutePrdCompletedEventHandler(object sender, ExecutePrdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecutePrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecutePrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataSetBySqlCompletedEventHandler(object sender, GetDataSetBySqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetBySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetBySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataTableBySqlCompletedEventHandler(object sender, GetDataTableBySqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTableBySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTableBySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDataSetByPrdCompletedEventHandler(object sender, GetDataSetByPrdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSetByPrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSetByPrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetZipDataSetBySqlCompletedEventHandler(object sender, GetZipDataSetBySqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipDataSetBySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipDataSetBySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetZipDataSetByPrdCompletedEventHandler(object sender, GetZipDataSetByPrdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipDataSetByPrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipDataSetByPrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckLoginPassCompletedEventHandler(object sender, CheckLoginPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591